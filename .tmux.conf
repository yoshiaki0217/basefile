
set -g assume-paste-time 0
# -- unbind ------------------------------------------
unbind C-b
unbind r
unbind 6
unbind 7
# ----------------------------------------------------

# Reload tmux config
bind r \
    source-file ~/.tmux.conf \;\
    display 'Reloaded tmux config.'

#####################################################
# Key bindings
# tmux list-keys # show current key bindings
#####################################################

# *****************************
# Iterm settings - send hex code
# command + j bind 0x1 0x6a (C-a j)
# command + k bind 0x1 0x6b (C-a k)
# command + t bind 0x1 0x74 (C-a t)
# command + d bind 0x1 0x79 (C-a y)
# command + w bind 0x1 0x36 (C-6)
# command + q bind 0x1 0x37 (C-7)
# *****************************

set -g prefix C-a

# Switch panel behave like vi
bind -nr C-h select-pane -L
bind -nr C-l select-pane -R
bind -nr C-j select-pane -D
bind -nr C-k select-pane -U

# Resize panel behave like vi
bind -r H resize-pane -L 1
bind -r L resize-pane -R 1
bind -r J resize-pane -D 1
bind -r K resize-pane -U 1

# Split window
bind y split-window -h -c "#{pane_current_path}"
bind x split-window -v -c "#{pane_current_path}"

# Switch window behave like vi
bind -r j previous-window
bind -r k next-window

# new window
### if you want to rename window
### you can use "tmux rename-window newname" or fish custtom func "rename_window newname"
bind t new-window -c "#{pane_current_path}"

# Close panel and session
bind 6 kill-pane
bind 7 kill-session

# Copy-mode settings
bind [ copy-mode \; display "Copy mode"
bind Escape copy-mode \; display "Copy mode"
bind -T copy-mode-vi v send -X begin-selection
# bind -T copy-mode-vi V select-line
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"

set-window-option -g mode-keys vi

#####################################################
# Visual settings
#####################################################

set -g default-terminal "screen-256color"
set -g terminal-overrides 'xterm:colors=256'

# Styles
set  -g status-style                 'bg=black,fg=green'
set  -g window-status-format         ' #I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})(#{pane_current_command})#F '
set  -g window-status-current-format ' #I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})(#{pane_current_command})#F '
setw -g window-status-style          'bg=black,fg=green'
setw -g window-status-current-style  'bg=black,fg=green,bold,underscore'
set  -g pane-active-border-style     'fg=yellow'

# ステータスバーを設定する
## 左パネルを設定する
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S"

## 右パネルを設定する
set -g status-right \
"#(ciji '{{.WIFI.SSID}} {{.WIFI.Intensity}}')"\
" #(ciji '{{.Battery.TMUXColor}}{{.Battery.Percentage}}%%{{.Battery.VProgressBar}}')"\
" #[fg=cyan]%a %H:%M"\
" #(ciji '{{.MoonPhase.EMOJI}}') "
## リフレッシュの間隔を設定する(デフォルト 15秒)
set -g status-interval 60
## ウィンドウリストの位置を中心寄せにする
set -g status-justify centre
## ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set -g visual-activity on
## ステータスバーを上部に表示する
set -g status-position top

# 復数ペインへの同期入力
bind s setw synchronize-panes on
bind S setw synchronize-panes off

#####################################################
# Another settings
#####################################################

# キーストロークのディレイを減らす
set -sg escape-time 1

# ウィンドウ、ペインのインデックスを1から始める
set -g base-index 1
setw -g pane-base-index 1

# renumber windows upon closing
set -g renumber-windows on

# マウス操作を有効にする
set -g mouse on
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'